# This workflow builds and releases the project to PyPi
# based on whether or not
name: Build and Release

on:
  push:
    tags: ["v*.*.*"]

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2

      - name: Configure Poetry
        run: |
          poetry config repositories.test-pypi https://test.pypi.org/legacy/
          poetry config pypi-token.test-pypi ${{ secrets.TEST_PYPI_SQLALCHEMY_2_ATLAS_TOKEN }}
          poetry config repositories.pypi https://pypi.org/legacy/
          poetry config pypi-token.pypi ${{ secrets.PYPI_SQLALCHEMY_2_ATLAS_TOKEN }}

      - name: Build Project for Distribution
        run: |
          poetry version $(git describe --tags --abbrev=0)
          poetry build

      - name: Check Version
        id: check-version
        run: |
          [[ "$(poetry version --short)" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] || echo prerelease=true >> $GITHUB_OUTPUT

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: steps.check-version.outputs.prerelease == 'true'

      # Deploy to test PyPi on non-trunk release
      - name: Publish to Test-PyPI
        run: poetry publish --repository=test-pypi

      - name: Get Branch
        id: get-branch
        run: echo "branch=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_OUTPUT

      # Deploy to PyPi on trunk release
      - name: Publish to PyPi
        if: ${{ steps.get-branch.branch == 'main' }}
        run: poetry publish --repository=pypi
