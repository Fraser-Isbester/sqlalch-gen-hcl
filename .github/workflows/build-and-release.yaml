name: Build & Release
on:
  pull_request:
    types: [closed]
    branches: [master, main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: "0"

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Bump version and push tag
        id: tag-version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: ^main$

      - name: "Show outputs (Optional)"
        shell: bash
        run: |
          echo 'New Tag: ${{ steps.tag-version.outputs.new_tag }}'
          echo 'New Version: ${{ steps.tag-version.outputs.new_version }}'
          echo 'Old Tag: ${{ steps.tag-version.outputs.previous_tag }}'
          echo 'Old Version: ${{ steps.tag-version.outputs.previous_version }}'
          echo 'Release Type: ${{ steps.tag-version.outputs.release_type }}'
          echo 'Changelog: ${{ steps.tag-version.outputs.changelog }}'

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag-version.outputs.new_tag }}
          name: Release ${{ steps.tag-version.outputs.new_tag }}
          body: ${{ steps.tag-version.outputs.changelog }}

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2

      - name: Configure Poetry
        run: |
          poetry config repositories.test-pypi https://test.pypi.org/legacy/
          poetry config pypi-token.test-pypi ${{ secrets.TEST_PYPI_SQLALCHEMY_2_ATLAS_TOKEN }}
          poetry config repositories.pypi https://upload.pypi.org/legacy/
          poetry config pypi-token.pypi ${{ secrets.PYPI_SQLALCHEMY_2_ATLAS_TOKEN }}

      - name: Build Project for Distribution
        run: |
          poetry version $(git describe --tags --abbrev=0)
          poetry build

      # Deploy to test PyPi
      - name: Publish to Test-PyPI
        run: poetry publish --repository=test-pypi

      # Deploy to PyPi
      - name: Publish to PyPi
        run: poetry publish --repository=pypi
